{"version":3,"sources":["components/Field/index.js","fuelPrice/index.js","components/FuelPrice/index.js","components/Form/index.js","components/Header/index.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["Field","_ref","label","description","value","setter","react_default","a","createElement","className","title","type","step","onChange","_ref2","target","hasValue","FuelPrice","fuelPrice","requestPrice","realPricePaid","_len","arguments","length","values","Array","_key","every","hasValues","liters","getLiters","price","getRealFuelPrice","toFixed","Form","_useState","useState","_useState2","Object","slicedToArray","setFuelPrice","_useState3","_useState4","setRequestPrice","_useState5","_useState6","setRealPricePaid","components_Field","components_FuelPrice","Header","Footer","href","App","components_Header","components_Form","components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.284775a0.chunk.js","sourcesContent":["import React from 'react'\nimport './style.css';\n\nconst Field = ({ label, description, value, setter }) => (\n  <label className='field'>\n    <span className='field__label' title={description}>\n      {label}:\n    </span>\n\n    <input\n      className='field__input'\n      type='number'\n      step='.01'\n      value={value}\n      onChange={({ target }) => setter(target.value)}\n    />\n  </label>\n)\n\nexport default Field\n","const hasValue = value => value > 0;\n\nexport const hasValues = (...values) => values.every(hasValue);\nexport const getLiters = (requestPrice, fuelPrice) => requestPrice / fuelPrice;\nexport const getRealFuelPrice = (liters, realPricePaid) => (realPricePaid / liters);\n","import React from 'react';\nimport { hasValues, getLiters, getRealFuelPrice } from '../../fuelPrice';\nimport './style.css';\n\nconst FuelPrice = ({ fuelPrice, requestPrice, realPricePaid }) => {\n  const hasAllValues = hasValues(fuelPrice, requestPrice, realPricePaid);\n\n  if (!hasAllValues) {\n    return (\n      <p className='text'>\n        Preencha os campos acima para obter o valor do combustível.\n      </p>\n    );\n  }\n\n  const liters = getLiters(requestPrice, fuelPrice);\n  const price = getRealFuelPrice(liters, realPricePaid);\n\n  return (\n    <p className='text'>\n      O valor do combustível é de R$ {price.toFixed(2)} ({liters.toFixed(2)} litros abastecidos)\n    </p>\n  );\n};\n\nexport default FuelPrice;\n","import React, { useState } from 'react';\nimport Field from '../Field';\nimport FuelPrice from '../FuelPrice';\nimport './style.css';\n\nconst Form = () => {\n  const [fuelPrice, setFuelPrice] = useState()\n  const [requestPrice, setRequestPrice] = useState()\n  const [realPricePaid, setRealPricePaid] = useState()\n\n  return (\n    <div className='form'>\n      <Field\n        label='Valor do combustível'\n        description='Valor do combustível divulgado no posto sem km de vantagem'\n        value={fuelPrice}\n        setter={setFuelPrice}\n      />\n\n      <Field\n        label='Valor total a pagar na bomba'\n        description='Valor solicitado no app Abastece Ai'\n        value={requestPrice}\n        setter={setRequestPrice}\n      />\n\n      <Field\n        label='Valor pago com desconto do km de vantagem'\n        description='Valor pago na app Abastece Ai'\n        value={realPricePaid}\n        setter={setRealPricePaid}\n      />\n\n      <FuelPrice\n        fuelPrice={fuelPrice}\n        requestPrice={requestPrice}\n        realPricePaid={realPricePaid}\n      />\n    </div>\n  )\n}\n\nexport default Form;\n","import React from 'react';\nimport './style.css';\n\nconst Header = () => (\n  <header className='header'>\n    <h1>Abastece Aí</h1>\n    <h3>Custo Benefício</h3>\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\nimport './style.css';\n\nconst Footer = () => (\n  <footer className=\"footer\">\n    <div className='line' />\n    <p>\n      Made with <span className=\"red\">❤︎</span> by <a href=\"https://twitter.com/FelipeNolleto\">nolleto</a>.\n      Find this on <a href=\"https://github.com/nolleto/abastece-ai-custo-beneficio-app\">github</a>\n    </p>\n  </footer>\n);\n\nexport default Footer;\n","import React from 'react';\nimport Form from './components/Form';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport './App.css';\n\nconst App = () => (\n  <div className='app'>\n    <Header />\n    <Form />\n    <Footer />\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}